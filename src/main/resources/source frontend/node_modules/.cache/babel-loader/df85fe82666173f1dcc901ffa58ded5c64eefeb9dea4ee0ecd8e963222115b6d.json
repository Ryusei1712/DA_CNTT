{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DANH\\\\Downloads\\\\frontend\\\\src\\\\TotalEmployeesTab.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport PeopleIcon from '@mui/icons-material/People';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TotalEmployeesTab = () => {\n  _s();\n  const [totalEmployees, setTotalEmployees] = useState(0);\n  useEffect(() => {\n    const fetchTotalEmployees = async () => {\n      try {\n        const response = await fetch('/api/employees');\n        const data = await response.json();\n        // Assuming the API returns an array of employees\n        // You can count the length of the array to get the total number of employees\n        setTotalEmployees(data.length);\n      } catch (error) {\n        console.error('Error fetching total employees:', error);\n      }\n    };\n    fetchTotalEmployees();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: 269,\n        height: 88,\n        backgroundColor: '#CAC4C4',\n        borderRadius: 4,\n        boxShadow: '0px 4px 16px rgba(0, 0, 0, 0.1)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(PeopleIcon, {\n        sx: {\n          fontSize: 48,\n          marginRight: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        children: [\"T\\u1ED5ng nh\\xE2n vi\\xEAn: \", totalEmployees]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(TotalEmployeesTab, \"F/WjgOIj7Bp523K+ZKDMcF8YTr0=\");\n_c = TotalEmployeesTab;\nexport default TotalEmployeesTab;\nvar _c;\n$RefreshReg$(_c, \"TotalEmployeesTab\");","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","Typography","PeopleIcon","jsxDEV","_jsxDEV","TotalEmployeesTab","_s","totalEmployees","setTotalEmployees","fetchTotalEmployees","response","fetch","data","json","length","error","console","sx","mt","children","width","height","backgroundColor","borderRadius","boxShadow","display","alignItems","justifyContent","fontSize","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","_c","$RefreshReg$"],"sources":["C:/Users/DANH/Downloads/frontend/src/TotalEmployeesTab.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\n\r\nconst TotalEmployeesTab = () => {\r\n    const [totalEmployees, setTotalEmployees] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchTotalEmployees = async () => {\r\n            try {\r\n                const response = await fetch('/api/employees');\r\n                const data = await response.json();\r\n                // Assuming the API returns an array of employees\r\n                // You can count the length of the array to get the total number of employees\r\n                setTotalEmployees(data.length);\r\n            } catch (error) {\r\n                console.error('Error fetching total employees:', error);\r\n            }\r\n        };\r\n\r\n        fetchTotalEmployees();\r\n    }, []);\r\n\r\n    return (\r\n        <Box sx={{ mt: 3 }}>\r\n            <Paper sx={{\r\n                width: 269,\r\n                height: 88,\r\n                backgroundColor: '#CAC4C4',\r\n                borderRadius: 4,\r\n                boxShadow: '0px 4px 16px rgba(0, 0, 0, 0.1)',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n            }}>\r\n                <PeopleIcon sx={{ fontSize: 48, marginRight: 1 }} />\r\n                <Typography variant=\"h6\" component=\"div\">\r\n                    Tổng nhân viên: {totalEmployees}\r\n                </Typography>\r\n            </Paper>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default TotalEmployeesTab;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACZ,MAAMW,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,CAAC;QAC9C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC;QACA;QACAL,iBAAiB,CAACI,IAAI,CAACE,MAAM,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MAC3D;IACJ,CAAC;IAEDN,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA,CAACL,GAAG;IAACkB,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,eACff,OAAA,CAACJ,KAAK;MAACiB,EAAE,EAAE;QACPG,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,EAAE;QACVC,eAAe,EAAE,SAAS;QAC1BC,YAAY,EAAE,CAAC;QACfC,SAAS,EAAE,iCAAiC;QAC5CC,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE;MACpB,CAAE;MAAAR,QAAA,gBACEf,OAAA,CAACF,UAAU;QAACe,EAAE,EAAE;UAAEW,QAAQ,EAAE,EAAE;UAAEC,WAAW,EAAE;QAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpD7B,OAAA,CAACH,UAAU;QAACiC,OAAO,EAAC,IAAI;QAACC,SAAS,EAAC,KAAK;QAAAhB,QAAA,GAAC,6BACrB,EAACZ,cAAc;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAAC3B,EAAA,CAtCID,iBAAiB;AAAA+B,EAAA,GAAjB/B,iBAAiB;AAwCvB,eAAeA,iBAAiB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}